..
    This file is part of SER-347 Documentation.
    Copyright 2020, Gilberto Queiroz and Thales Körting.


Criando um Novo Ambiente
++++++++++++++++++++++++


Um ambiente de trabalho criado pelo aplicativo ``conda`` nada mais é do que um diretório que contém um conjunto específico de pacotes. Desta forma, é possível ter numa mesma instalação da Anaconda em um ambiente preparado para trabalhar com Machine Learning, contendo versões específicas do Python e de versões específicas de bibliotecas como a TensorFlow e suas dependências, e um outro ambiente para trabalhar com o desenvolvimeno de aplicações Web, em uma versão diferente do Python e com bibliotecas comuns ao TensorFlow em outras versões, que são exigidas para o seu caso de uso Web. Os ambientes são isolados, isto é, a modificação de bibliotecas em um, não afeta os demais. Como veremos mais adiante, existem várias formas de compartilhar a definição de seus ambientes de trabalho, de modo a facilitar a criação de novos ambientes por colaboradores.


Uma boa prática consiste em nunca modificar o ambiente de trabalho padrão (``base`` ou ``root``). Devemos criar um ambiente de trabalho com a versão do ``Python`` e os pacotes desejados.


Vamos criar um novo ambiente denominado ``geospatial`` contendo uma versão do ``Python 3`` e das bibliotecas ``numpy``, ``matplotlib`` e ``pandas``:


.. code-block:: shell

    conda create --name geospatial python=3 numpy matplotlib pandas


Uma mensagem como a mostrada abaixo será exibida::

    Solving environment: done

    ## Package Plan ##

      environment location: D:\Users\gribeiro\Anaconda3\envs\geospatial

      added / updated specs:
        - matplotlib
        - numpy
        - pandas
        - python=3


    The following NEW packages will be INSTALLED:

        ca-certificates: 2018.03.07-0
        certifi:         2018.4.16-py36_0
        cycler:          0.10.0-py36h009560c_0
        freetype:        2.8-h51f8f2c_1
        icc_rt:          2017.0.4-h97af966_0
        icu:             58.2-ha66f8fd_1
        intel-openmp:    2018.0.0-8
        jpeg:            9b-hb83a4c4_2
        kiwisolver:      1.0.1-py36h12c3424_0
        libpng:          1.6.34-h79bbb47_0
        matplotlib:      2.2.2-py36h153e9ff_1
        mkl:             2018.0.2-1
        mkl_fft:         1.0.1-py36h452e1ab_0
        mkl_random:      1.0.1-py36h9258bd6_0
        numpy:           1.14.2-py36h5c71026_1
        openssl:         1.0.2o-h8ea7d77_0
        pandas:          0.22.0-py36h6538335_0
        ...
        zlib:            1.2.11-h8395fce_2

    Proceed ([y]/n)?


Como pode ser observado na saída do comando acima, o ``conda`` irá criar o novo ambiente chamado ``geospatial`` sob a pasta ``D:\Users\gribeiro\Anaconda3\envs\geospatial``, resolvendo toda a lista de dependências dos pacotes ``numpy``, ``matplotlib`` e ``pandas`` com a versão do ``Python`` indicada.


Assim que o novo ambiente é criado, podemos ativá-lo através do comando ``conda activate``:


.. code-block:: shell

    conda activate geospatial


Repare que o ``prompt`` de comando é alterado para::

    (geospatial) C:\Users\gribeiro>


Para desativar o ambiente corrente (``geospatial``) e voltar ao ambiente ``base``, podemos usar o comando ``conda deactivate``, como mostrado abaixo:


.. code-block:: shell

    conda deactivate


.. note::

    Por hora, vamos manter como o ambiente de trabalho corrente o novo ambiente ``geospatial``.


Para obter uma listagem dos ambientes existentes no seu sistema, utilize o comando ``conda info`` como mostrado abaixo:

.. code-block:: shell

    conda info --envs


Saída::

    # conda environments:
    #
    base                     D:\Users\gribeiro\Anaconda3
    geospatial            *  D:\Users\gribeiro\Anaconda3\envs\geospatial
    ser347                   D:\Users\gribeiro\Anaconda3\envs\ser347


Na saída acima, o ambiente ativo é marcado com um ``*``. No caso, o ambiente chamado ``geospatial`` é o ativo.