..
    This file is part of SER-347 Documentation.
    Copyright 2020, Gilberto Queiroz and Thales Körting.


Solução - Lista de Exercícios Especial
--------------------------------------


**Exercício 01**. Crie um programa que leia as 4 informações numéricas (VP, FP, FN e VN) e apresente como resultado os valores das 4 métricas (AG, Precision, Recall e F1-Score).


.. code-block:: python
    :linenos:
    :caption: metricas.py

    # exemplo:
    # VP 20, FP 4, FN 5, VN 11 -> AG 0.775, Precision:  0.8333333333333334, Recall:  0.8, F1-Score:  0.816326530612245

    VP = int(input("total de verdadeiros positivos: "))
    FP = int(input("total de falsos positivos: "))
    FN = int(input("total de falsos negativos: "))
    VN = int(input("total de verdadeiros negativos: "))

    N = VP + FP + FN + VN
    ag = (VP + VN) / N
    precision = VP / (VP + FP)
    recall = VP / (VP + FN)
    f1 = (2 * precision * recall) / (precision + recall)

    print("N: ", N)
    print("Acurácia Global: ", ag)
    print("Precision: ", precision)
    print("Recall: ", recall)
    print("F1-Score: ", f1)


**Exercício 02.** Escreva uma função em Python que receba como entrada uma string contendo apenas dígitos decimais (0 a 9) e que retorne o somatório desses dígitos.


.. code-block:: python
    :linenos:
    :caption: soma_digitos.py

    # exemplo:
    # '12345', '9876', '24680', '0101010' -> 15, 30, 20, 3

    def minha_funcao(numero_txt):
        soma = 0

        for caracter in numero_txt:
            soma += int(caracter)

        return soma

    lista_de_numeros = ('12345', '9876', '24680', '0101010')

    for numero_txt in lista_de_numeros:
        soma = minha_funcao(numero_txt)

        print(f'O valor da soma dos digitos de "{numero_txt}" é: {soma}')


**Exercício 03**. Faça um programa que defina a lista de pixels, leia os valores de gain e offset e apresente como resultado a lista de pixels resultante da aplicação destes valores.


.. code-block:: python
    :linenos:
    :caption: gain_offset.py

    # exemplo:
    # G 2, O 20 -> [40, 255, 255, 255, 60, 80, 60, 100, 68, 68, 90, 110, 132, 154, 220, 255, 20, 66, 66, 68]

    lista_de_pixels_de_entrada = (10, 200, 250, 243, 20, 30, 20, 40, 24, 24, 35, 45, 56, 67, 100, 120, 0, 23, 23, 24)

    G = float(input("gain: "))
    O = float(input("offset: "))

    lista_de_pixels_de_saida = []

    for i1 in lista_de_pixels_de_entrada:
        i2 = int(i1 * G + O)

        if i2 < 0:
            i2 = 0
        elif i2 > 255:
            i2 = 255

        lista_de_pixels_de_saida.append(i2)

    print("total de pixels processados: ", len(lista_de_pixels_de_saida))

    print("pixels de entrada: ", lista_de_pixels_de_entrada)

    print("pixels de saída:   ", lista_de_pixels_de_saida)


**Exercício 04**. Faça um programa em Python que peça ao usuário para digitar um texto qualquer e em seguida diga se uma ou mais palavras da lista acima ocorrem nesse texto. O programa deverá ficar em execução até que o usuário informe que não quer mais entrar com novos textos.


.. code-block:: python
    :linenos:
    :caption: conta_palavras.py

    # exemplo (http://lerolero.bgnweb.com.br/):
    # Assim mesmo, a estrutura atual da organização aponta para a melhoria do sistema de formação de quadros que corresponde às necessidades. Desta maneira, o novo modelo estrutural aqui preconizado maximiza as possibilidades por conta das formas de ação. Podemos já vislumbrar o modo pelo qual a valorização de fatores subjetivos estende o alcance e a importância das diretrizes de desenvolvimento para o futuro. Todas estas questões, devidamente ponderadas, levantam dúvidas sobre se o surgimento do comércio virtual facilita a criação das posturas dos órgãos dirigentes com relação às suas atribuições. As experiências acumuladas demonstram que o fenômeno da Internet obstaculiza a apreciação da importância do processo de comunicação como um todo. Caros amigos, o julgamento imparcial das eventualidades desafia a capacidade de equalização das direções preferenciais no sentido do progresso. Percebemos, cada vez mais, que a consulta aos diversos militantes pode nos levar a considerar a reestruturação das condições financeiras e administrativas exigidas. Não obstante, o consenso sobre a necessidade de qualificação prepara-nos para enfrentar situações atípicas decorrentes dos paradigmas corporativos. Do mesmo modo, a mobilidade dos capitais internacionais faz parte de um processo de gerenciamento dos relacionamentos verticais entre as hierarquias. Todavia, o desafiador cenário globalizado possibilita uma melhor visão global dos procedimentos normalmente adotados. O que temos que ter sempre em mente é que a hegemonia do ambiente político talvez venha a ressaltar a relatividade dos conhecimentos estratégicos para atingir a excelência. Ainda assim, existem dúvidas a respeito de como a complexidade dos estudos efetuados afeta positivamente a correta previsão do impacto na agilidade decisória.
    # respeito ocorre no texto
    # fato ocorre no texto
    # paradigma ocorre no texto

    palavras = ['significado', 'exceção', 'impressão',
                'ciência', 'respeito', 'fato',
                'maturidade', 'essencial', 'paradigma',
                'propósito', 'viés', 'vereda']

    resposta = 's'

    while resposta == 's':
        texto = input("Digite um texto qualquer: ")

        for palavra in palavras:
            if palavra in texto:
                print(palavra, 'ocorre no texto')

        resposta = input('Digite \'s\' para continuar, ou \'n\' para sair: ')


**Exercício 05**. Faça um programa em Python que peça ao usuário para digitar uma palavra, e que inclua esta palavra numa lista. Entretanto, o programa deverá ficar em execução até que o usuário informe que não quer mais entrar com novas palavras. Ao final, o programa deverá escrever na tela a lista de palavras digitadas pelo usuário.


.. code-block:: python
    :linenos:
    :caption: lista_de_palavras.py

    lista_de_palavras = []

    resposta = 's'

    while resposta == 's':
        palavra = input('Digite uma palavra: ')

        lista_de_palavras.append(palavra)

        resposta = input('Digite \'s\' para continuar, ou \'n\' para sair: ')

    print('Lista de palavras: ', lista_de_palavras)


**Exercício 06**. Faça um programa que leia uma string contendo uma sequência de números reais arbitrários (positivos ou negativos). O programa deverá apresentar a média do conjunto de valores lido.


.. code-block:: python
    :linenos:
    :caption: media_dos_valores.py

    # exemplos:
    # 1,1,1,2.1,1 -> 1.22
    # 1,1,-2,2 -> 0.5

    sequencia_de_numeros = input('Digite uma sequência de números reais, separados por \',\': ')

    lista_de_numeros = sequencia_de_numeros.split(',')

    N = len(lista_de_numeros)

    soma = 0

    for numero in lista_de_numeros:
        soma = soma + float(numero)

    print('A média do conjunto de', N, 'números é:', soma / N)


**Exercício 07**. Construa uma função que receba como parâmetro um polígono simples, e que compute a área desse polígono.


.. code-block:: python
    :linenos:
    :caption: area.py


    # exemplo:
    # ((0, 0), (10, 0), (10, 10), (0, 10)) -> 100.0

    def area(poligono):
        poligono_simplificado = []

        for vertice in poligono:
            poligono_simplificado.append(vertice)

        poligono_simplificado.append(poligono[0])

        print("poligono:    ", poligono)

        print("simplificado:", poligono_simplificado)

        N = len(poligono_simplificado)

        soma = 0

        for i in range(N - 1):
            x1 = poligono_simplificado[i][0]
            y1 = poligono_simplificado[i][1]
            x2 = poligono_simplificado[i + 1][0]
            y2 = poligono_simplificado[i + 1][1]

            soma = soma + (x1 * y2 - y1 * x2)

        return abs(soma / 2)

    quadrado = ((0, 0), (10, 0), (10, 10), (0, 10))

    print("Área do polígono", quadrado, ":", area(quadrado))
