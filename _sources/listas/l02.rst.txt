..
    This file is part of "Notas de Aula do Curso Introdução à Programação com Dados Geoespaciais".
    Copyright 2020-2021, Gilberto Queiroz and Thales Körting.


.. _sec_listas_l02:

Lista de Exercícios 02
======================


**Atenção:**

.. rst-class:: open

- Os exercícios práticos devem ser desenvolvidos em Python. Escreva a documentação que achar pertinente dentro do próprio código fonte, que deverá utilizar a codificação de caracteres ``UTF-8``.

- A solução de cada exercício deverá ser entregue em um único arquivo de código fonte na linguagem Python. Use arquivos com a extensão ``.py`` com a seguinte nomenclatura:

    | exercicio-**numero**.py.
    |
    | Exemplo: ``exercicio-01.py``.
    |
    | Não use acentos ou caracteres especiais nos nomes dos arquivos.

- Você deverá entregar a lista através de um *pull-request* a ser realizado no repositório associado ao seu usuário na organização `prog-geo <https://github.com/prog-geo>`_. Esse *pull-request* deverá conter uma pasta com nome **Lista-02** contendo todos os arquivos da entrega.

- **Prazo para entrega:** 06/04/2022 - 18:00


-----


**Exercício 01.** Usando o terminal interativo do Python, use o comando ``type(objeto)`` e descubra o tipo de dados dos seguintes objetos::

    1

    True

    5 / 2

    2.5

    False

    5 + 3j


.. note::

    Você deverá entregar um arquivo chamado ``exercicio-01.py`` com a sequência de comandos digitada no terminal interativo. Para cada comando, inclua na linha seguinte o seu resultado como um texto comentado.


-----


**Exercício 02.** Apresente o resultado das seguintes expressões::

    5 / 2

    7 * 4 + 2

    (7 * 4) + 2

    7 * (4 + 2)

    2 ** 3

    2 ** 3 ** 4

    2 ** -3 ** 4

    5 % 2

    6 % 2

    7 % 2

    8 % 2

    5 + 1

    5.0 + 1

    5 * math.log10(100) - 8 ** 2

    math.pi

    math.sin(math.pi / 2 )

    math.cos(math.pi / 4 )


.. note::

    Você deverá entregar um arquivo chamado ``exercicio-02.py`` com a sequência de comandos digitada no terminal interativo. Para cada comando, inclua na linha seguinte o seu resultado como um texto comentado.


-----


**Exercício 03.** Considere as equações dos seguintes índices espectrais:

- NDWI:

    .. math::
        :label: :listas:l02:ndwi

        NDWI = \frac{(X_{green} - X_{nir})}{(X_{green} + X_{nir})}


    onde: :math:`X_{green}` refere-se à banda espectral da faixa do verde e :math:`X_{nir}` refere-se à banda do infravermelho próximo.

    .. note::

        A equação acima pode ser encontrada em :cite:`mcfeeters:1996`.


- NDVI:

    .. math::
        :label: :listas:l02:ndvi

        NDVI = \frac{(X_{nir} - X_{red})}{(X_{nir} + X_{red})}


    onde: :math:`X_{red}` refere-se à banda espectral da faixa do vermelho e :math:`X_{nir}` refere-se à banda do infravermelho próximo.


De acordo com as equações acima, crie um programa que leia os valores de :math:`X_{green}`, :math:`X_{nir}` e :math:`X_{red}`, e imprima como resultados os valores de ``NDWI`` e ``NDVI``.


-----


**Exercício 04.** Escreva um programa que pergunte ao usuário as coordenadas de latitude e longitude, em grau-decimal, de dois pontos quaisquer na esfera terrestre e que apresente a distância entre eles. Essa distância deverá ser calculada de acordo com a `fórmula de Haversine <https://en.wikipedia.org/wiki/Haversine\_formula>`_:


.. math::
    :label: :listas:l02:haversine

    d(p, q) = 2r \arcsin{\sqrt{\sin^2({\frac{\phi_2 - \phi_1}{2}}) + \cos{\phi_1} \cos{\phi_2} \sin^2({\frac{\lambda_2 - \lambda_1}{2}})}}


onde:

- :math:`r`: é o raio da esfera (:math:`\sim6371 km`).

- :math:`\phi_1` e :math:`\phi_2`: latitude dos pontos em radianos.

- :math:`\lambda_1` e :math:`\lambda_2`: longitude dos pontos em radianos.


.. note::

    Lembre-se que todas as funções trigonométricas e suas inversas, bem como funções para conversão entre graus e radianos encontram-se na `biblioteca matemática do Python <https://docs.python.org/3/library/math.html>`_.
