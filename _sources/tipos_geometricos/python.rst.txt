..
    This file is part of SER-347 Documentation.
    Copyright 2020, Gilberto Queiroz and Thales Körting.


Tipos Geométricos em Python
---------------------------


.. figure:: ../img/tipos-geometricos/ecossistema-geoespacial.png
    :alt: Ecossistema Python para Aplicações Geoespaciais
    :width: 640
    :figclass: align-center
    :name: tipos-geometricos:ecopython

    Bibliotecas ``C/C++`` e ``Python`` para manipulação de dados geoespaciais.


Em ``Python``, podemos utilizar as bibliotecas `GDAL <http://www.gdal.org>`_ e `Shapely <https://github.com/Toblerity/Shapely>`_ para criação e manipulação de geometrias.


A ``GDAL`` é uma biblioteca de software livre que fornece uma *camada de abstração de dados geoespaciais* que possibilita o desenvolvimento de aplicações que manipulam dados nos mais diferentes formatos e sistemas. A API (*Application Programming Interface* ou Interface de Programação de Aplicações) desta biblioteca encontra-se disponível para uso em ``Python`` através de um *binding* (ou *wrapper*), que fornece acesso às funcionalidades implementadas em ``C++``. A ``GDAL`` é basicamente composta de quatro APIs:

- **GDAL:** Voltada para manipulação de dados matriciais (*raster*), com capacidade de leitura e escrita de diversos formatos de imagem de sensoriamento remoto, como ``GeoTIFF``, ``HDF``, e ``JPEG``, entre outros. Esta parte da API contém objetos para manipulação das dimensões de uma imagem, para acesso de leitura e escrita de blocos nas bandas espectrais de uma imagem, acesso a metadados e manipulação de pirâmides de multi-resolução.

- **OGR:** Parte da API voltada para manipulação de dados em formatos vetoriais, tais como ``ESRI Shapefile``, ``Google KML`` e ``GeoJSON``. Apresenta os conceitos de camada de informação, feições, atributos alfanuméricos e geométricos.

- **OSR:** Voltada para a manipulação de projeções e sistemas de referência espacial.

- **GNM:** Acrônimo de *Geographic Network Model*, esta parte da API serve ao propósito de manipulação de redes geográficas.


A parte da biblioteca ``GDAL`` voltada para manipulação de dados vetoriais conhecida por ``OGR`` contém os tipos geométricos da ``OGC-SFS`` mostrados na :numref:`Figura %s <tipos-geometricos:ogc-sfs>` (**Seção ?.?.?**). As operações espaciais disponíveis sobre os tipos geométricos da GDAL são implementadas através da biblioteca ``C++`` ``GEOS`` (*Geometry Engine Open Source*). A ``GEOS`` implementa todos os operadores espaciais definidos na ``OGC-SFS``, com destaque para as operações topológicas. Além disso, ela possui outras operações, como triangulação, diagrama de voronoi e estruturas de dados espaciais como árvores-R. Consequentemente, a ``GEOS`` é usada em diversos projetos de software livre, como ``TerraView``, ``QGIS``, ``PostGIS`` e muitos outros.


Apesar da ``GDAL`` ser uma biblioteca robusta e completa, sua API ``Python`` expõe os tipos e operações com um estilo de programação muito próximo da linguagem ``C``. Por isso, existem outras bibliotecas em ``Python`` que tentam fornecer um estilo de programação mais próximo do do universo ``Python``.


A biblioteca ``Shapely`` é uma dessas bibliotecas, que fornece especificamente o modelo geométrico e as operações espaciais da ``OGC-SFS`` num estilo *"Pythonico"*. Vale ressaltar que a ``Shapely`` utiliza a ``GEOS`` para representação dos tipos geométricos bem como para as operações espaciais.


A próxima seção utilizará a bibloteca ``Shapely`` para ilustrar a manipulação de geometrias no espaço cartesiano em ``Python``.




